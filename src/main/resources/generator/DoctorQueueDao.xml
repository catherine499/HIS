<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.HIS.generate.DoctorQueueDao">
  <resultMap id="BaseResultMap" type="com.example.HIS.models.DoctorQueue">
    <id column="doctor_queue_id" jdbcType="INTEGER" property="doctorQueueId" />
    <result column="doctor_id" jdbcType="VARCHAR" property="doctorId" />
    <result column="doctor_queue_date" jdbcType="DATE" property="doctorQueueDate" />
    <result column="register_id" jdbcType="INTEGER" property="registerId" />
    <result column="register_number" jdbcType="INTEGER" property="registerNumber" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    doctor_queue_id, doctor_id, doctor_queue_date, register_id, register_number, `state`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from doctor_queue
    where doctor_queue_id = #{doctorQueueId,jdbcType=INTEGER}
  </select>
    <select id="getMaxIdByDoctorId" resultType="java.lang.Integer">
      select ifnull(MAX(register_number),0)
      from doctor_queue
      where doctor_id = #{doctorId,jdbcType=VARCHAR} and <![CDATA[ DATE_FORMAT(doctor_queue_date, '%Y-%m-%d') = DATE_FORMAT(NOW(),'%Y-%m-%d')]]>
    </select>
  <select id="getByRegisterId" resultType="com.example.HIS.models.DoctorQueue" resultMap="BaseResultMap">
    select *
    from doctor_queue
    where register_id = #{registerId,jdbcType=INTEGER}
  </select>
    <select id="getByDoctorId" resultType="com.example.HIS.models.DoctorQueue" resultMap="BaseResultMap">
      select *
      from doctor_queue
      where doctor_id=#{doctorId,jdbcType=VARCHAR} and <![CDATA[ DATE_FORMAT(doctor_queue_date, '%Y-%m-%d') = DATE_FORMAT(NOW(),'%Y-%m-%d')]]>
      and state !=1
      order by doctor_queue_date asc
    </select>
  <select id="getReserveByDoctorId" resultType="com.example.HIS.models.DoctorQueue" resultMap="BaseResultMap">
    select *
    from doctor_queue,register_tables
    where doctor_queue.doctor_id=#{doctorId,jdbcType=VARCHAR}
      and <![CDATA[ DATE_FORMAT(doctor_queue.doctor_queue_date, '%Y-%m-%d') = DATE_FORMAT(NOW(),'%Y-%m-%d')]]>
      and doctor_queue.state !=1 and doctor_queue.register_id=register_tables.register_id
      and register_tables.register_queue_type=1
    order by doctor_queue_date asc
  </select>
  <select id="getSiteByDoctorId" resultType="com.example.HIS.models.DoctorQueue" resultMap="BaseResultMap">
    select *
    from doctor_queue,register_tables
    where doctor_queue.doctor_id=#{doctorId,jdbcType=VARCHAR}
      and <![CDATA[ DATE_FORMAT(doctor_queue.doctor_queue_date, '%Y-%m-%d') = DATE_FORMAT(NOW(),'%Y-%m-%d')]]>
      and doctor_queue.state !=1 and doctor_queue.register_id=register_tables.register_id
      and register_tables.register_queue_type=0
    order by doctor_queue_date asc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from doctor_queue
    where doctor_queue_id = #{doctorQueueId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="doctor_queue_id" keyProperty="doctorQueueId" parameterType="com.example.HIS.models.DoctorQueue" useGeneratedKeys="true">
    insert into doctor_queue (doctor_id, doctor_queue_date, register_id, 
      register_number, `state`)
    values (#{doctorId,jdbcType=VARCHAR}, #{doctorQueueDate,jdbcType=DATE}, #{registerId,jdbcType=INTEGER}, 
      #{registerNumber,jdbcType=INTEGER}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="doctor_queue_id" keyProperty="doctorQueueId" parameterType="com.example.HIS.models.DoctorQueue" useGeneratedKeys="true">
    insert into doctor_queue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="doctorQueueDate != null">
        doctor_queue_date,
      </if>
      <if test="registerId != null">
        register_id,
      </if>
      <if test="registerNumber != null">
        register_number,
      </if>
      <if test="state != null">
        `state`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="doctorId != null">
        #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="doctorQueueDate != null">
        #{doctorQueueDate,jdbcType=DATE},
      </if>
      <if test="registerId != null">
        #{registerId,jdbcType=INTEGER},
      </if>
      <if test="registerNumber != null">
        #{registerNumber,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.HIS.models.DoctorQueue">
    update doctor_queue
    <set>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="doctorQueueDate != null">
        doctor_queue_date = #{doctorQueueDate,jdbcType=DATE},
      </if>
      <if test="registerId != null">
        register_id = #{registerId,jdbcType=INTEGER},
      </if>
      <if test="registerNumber != null">
        register_number = #{registerNumber,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where doctor_queue_id = #{doctorQueueId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.HIS.models.DoctorQueue">
    update doctor_queue
    set doctor_id = #{doctorId,jdbcType=VARCHAR},
      doctor_queue_date = #{doctorQueueDate,jdbcType=DATE},
      register_id = #{registerId,jdbcType=INTEGER},
      register_number = #{registerNumber,jdbcType=INTEGER},
      `state` = #{state,jdbcType=INTEGER}
    where doctor_queue_id = #{doctorQueueId,jdbcType=INTEGER}
  </update>
</mapper>